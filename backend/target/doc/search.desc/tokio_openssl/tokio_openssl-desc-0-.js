searchState.loadedDescShard("tokio_openssl", 0, "Async TLS streams backed by OpenSSL.\nAn asynchronous version of <code>openssl::ssl::SslStream</code>.\nA convenience method wrapping <code>poll_accept</code>.\nA convenience method wrapping <code>poll_connect</code>.\nA convenience method wrapping <code>poll_do_handshake</code>.\nReturns the argument unchanged.\nReturns a mutable reference to the underlying stream.\nReturns a pinned mutable reference to the underlying …\nReturns a shared reference to the underlying stream.\nCalls <code>U::from(self)</code>.\nLike <code>SslStream::new</code>.\nA convenience method wrapping <code>poll_peek</code>.\nLike <code>SslStream::accept</code>.\nLike <code>SslStream::connect</code>.\nLike <code>SslStream::do_handshake</code>.\nLike <code>SslStream::ssl_peek</code>.\nLike <code>SslStream::read_early_data</code>.\nLike <code>SslStream::write_early_data</code>.\nA convenience method wrapping <code>poll_read_early_data</code>.\nReturns a shared reference to the <code>Ssl</code> object associated …\nA convenience method wrapping <code>poll_write_early_data</code>.")