searchState.loadedDescShard("ordered_float", 0, "Wrappers for total order on Floats.  See the <code>OrderedFloat</code> …\nGeneric trait for floating point numbers that works with …\nAn error indicating an attempt to construct NotNan from a …\nThe parsed float value resulted in a NaN.\nA wrapper around floats providing an implementation of <code>Eq</code>, …\nA wrapper around floats providing implementations of <code>Eq</code>, …\nA plain parse error from the underlying float type.\nAn error indicating a parse error from a string for <code>NotNan</code>.\nComputes the absolute value of <code>self</code>. Returns …\nConverts this <code>NotNan</code><code>&lt;</code><code>f64</code><code>&gt;</code> to a <code>NotNan</code><code>&lt;</code><code>f32</code><code>&gt;</code> while giving up …\nReturns the smallest integer greater than or equal to a …\nA value bounded by a minimum and a maximum\nReturns the floating point category of the number. If only …\nReturns epsilon, a small positive value.\nReturns the largest integer less than or equal to a number.\nReturns the fractional part of a number.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a &amp;str to <code>OrderedFloat</code>. Returns an error if the …\nConvert a &amp;str to <code>NotNan</code>. Returns an error if the string …\nReturns positive infinity.\nReturns the mantissa, base 2 exponent, and sign as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the value out.\nGet the value out.\nReturns <code>true</code> if the number is neither infinite or NaN.\nReturns <code>true</code> if the number is infinite.\nReturns <code>true</code> if the number is NaN.\nReturns <code>true</code> if the number is neither zero, infinite, …\nReturns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …\nReturns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …\nReturns <code>true</code> if the number is subnormal.\nReturns the maximum of the two numbers.\nReturns the largest finite value that this type can …\nReturns the minimum of the two numbers.\nReturns the smallest positive, normalized value that this …\nReturns the smallest finite value that this type can …\nReturns NaN.\nReturns negative infinity.\nReturns <code>-0.0</code>.\nCreate a <code>NotNan</code> value.\nCreate a <code>NotNan</code> value from a value that is guaranteed to …\nRaise a number to an integer power.\nReturns the reciprocal (multiplicative inverse) of the …\nReturns the nearest integer to a number. Round half-way …\nReturns a number that represents the sign of <code>self</code>.\nConverts to degrees, assuming the number is in radians.\nConverts to radians, assuming the number is in degrees.\nReturn the integer part of a number.\nCreate a <code>NotNan</code> value from a value that is guaranteed to …")