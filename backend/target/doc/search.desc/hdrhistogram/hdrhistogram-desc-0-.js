searchState.loadedDescShard("hdrhistogram", 0, "HdrSample is a port of Gil Tene’s HdrHistogram to native …\nThis trait represents the operations a histogram must be …\n<code>Histogram</code> is the core data structure in HdrSample. It …\nAdd the contents of another histogram to this one.\nAdd the contents of another histogram to this one, while …\nCounter as a f64.\nCounter as a u64.\nControl whether or not the histogram can auto-resize and …\nGet the number of buckets used by the histogram to cover …\nClear the contents of this histogram while preserving its …\nGet a copy of this histogram, corrected for coordinated …\nGet the total number of samples recorded.\nGet the count of recorded values at a specific value (to …\nGet the count of recorded values within a range of value …\nGet the current number of distinct values that can be …\nDetermine if two values are equivalent with the histogram…\nGet the size (in value units) of the range of values that …\nError types used throughout this library\nReturns the argument unchanged.\nGet the highest trackable value for the histogram in its …\nGet the highest value that is equivalent to the given …\nCalls <code>U::from(self)</code>.\nReturns true if this histogram is currently able to …\nReturns true if this histogram has no recorded values.\nIterates through all histogram values using the finest …\nIterates through histogram values using linear value …\nIterates through histogram values at logarithmically …\nIterate through histogram values by quantile levels.\nIterates through all recorded histogram values using the …\nModule containing the implementations of all <code>Histogram</code> …\nGet the total number of samples recorded.\nGet the lowest discernible value for the histogram in its …\nGet the lowest value that is equivalent to the given value …\nGet the highest recorded value level in the histogram. If …\nGet the computed mean value of all recorded values in the …\nGet a value that lies in the middle (rounded up) of the …\nGet the lowest recorded value level in the histogram. If …\nGet the lowest recorded non-zero value level in the …\nConstruct an auto-resizing <code>Histogram</code> with a lowest …\nConstruct a <code>Histogram</code> with the same range settings as a …\nConstruct a <code>Histogram</code> with known upper and lower bounds …\nConstruct a <code>Histogram</code> given a known maximum value to be …\nGet the next value that is <em>not</em> equivalent to the given …\nGet the percentile of samples at and below a given value.\nGet the quantile of samples at or below a given value.\nRecord <code>value</code> in the histogram.\nRecord a value in the histogram while correcting for …\nRecord multiple samples for a value in the histogram, …\nRecord multiple values in the histogram while correcting …\nReset the contents and statistics of this histogram, …\nRecord <code>value</code> in the histogram, clamped to the range of the …\nRecord multiple samples for a value in the histogram, each …\nOverwrite this histogram with the given histogram. All …\nOverwrite this histogram with the given histogram while …\nGet the number of significant value digits kept by this …\nGet the computed standard deviation of all recorded values …\nSubtract the contents of another histogram from this one.\nGet the value at a given percentile.\nGet the value at a given quantile.\nErrors that can occur when adding another histogram.\nCannot represent sigfig worth of values beyond the lowest …\nErrors that can occur when creating a histogram.\nHighest trackable value must be &gt;= 2 * lowest discernible …\nLowest discernible value must be &lt;= <code>u64::max_value() / 2</code> …\nLowest discernible value must be &gt;= 1.\nThe other histogram includes values that do not fit in …\nErrors that can occur while recording a value and its …\nThe other histogram includes values that would map to …\nAuto resizing is enabled and must be used to represent the …\nNumber of significant digits must be in the range <code>[0, 5]</code>. …\nErrors that can occur when subtracting another histogram.\nThe other histogram includes counts that are higher than …\nThe other histogram includes values that do not fit in …\nThe <code>usize</code> type is too small to represent the desired …\nThe value to record is not representable in this histogram …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>HistogramIterator</code> provides a base iterator for a <code>Histogram</code>.\nThe value emitted at each step when iterating over a …\nExtra information about the picked point in the histogram …\nA trait for designing an subset iterator over values in a …\nAn iterator that iterates over histogram values.\nRecorded count for values equivalent to <code>value</code>\nNumber of values traversed since the last iteration step\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn iterator that iterates linearly over histogram values.\nAn iterator that iterates logarithmically over histogram …\nShould we keep iterating even though the last index with …\nCreate a new IterationValue.\nPercent of recorded values that are at or below the …\nReturn <code>Some</code> if an <code>IterationValue</code> should be emitted at this …\nAn iterator that iterates over histogram quantiles.\nQuantile of recorded values that are at or below the …\nQuantile iterated to, which may be different than …\nAn iterator that iterates over recorded histogram values.\nThe value iterated to. Some iterators provide a specific …\nAn iterator that will yield every bin.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new full iterator. See <code>Histogram::iter_all</code> for …\nAn iterator that will yield at fixed-size steps through …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new linear iterator. See <code>Histogram::iter_linear</code>…\nAn iterator that will yield at log-size steps through the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new logarithmic iterator. See …\nAn iterator that will yield at quantile steps through the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new iterator. See <code>Histogram::iter_quantiles</code> …\nAn iterator that will yield only bins with at least one …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct a new sampled iterator. See …")